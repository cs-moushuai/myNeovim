*myVimHelp.txt*	For Vim version 7.3	Last change: 2020 September 12
:noh取消高亮(搜索后的)
<Leader>m 菜单
<Leader>h 帮助(可修改)
/*<Leader>H 帮助*/
<Leader>H 查看snippet文档
<Leader>t 翻译在命令行
<Leader>T 翻译带弹窗
<Leader>r 翻译并替换
/*<Leader>x 翻译到剪切板*/
<Leader>L 新建标签
<Leader>f ranger打开文件
<Leader>R source ~/.vimrc
<Leader>e 打开.vimrc
======================================
<c-p> 文件搜索
<Leader>M 历史打开过的文件
<Leader>B Buffer
<Leader>F 函数搜索（仅当前文件里）
<Leader>rg 模糊搜索，很强大的功能，迅速秒搜
======================================

gt 下一个标签
gT 上一个标签
n+gt 到n个标签
======================================
\e 切换显示文件浏览
\a 查找到当前文件位置
x 在浏览器打开文件夹
h 关闭文件夹
j 上移
k 下移
l 文件夹则展开，文件则打开
o 文件夹则展开，文件则打开
I split 分屏打开
m 移动
c 拷贝
p 粘贴 移动或拷贝的
r 重命名
. 隐藏文件
shift-k 在当前光标下新建文件夹
shift-n 在当前光标下新建文件
shift_c 切换样式
d 删除光标所在的文件或文件夹
yy 输出当前光标所在的路径
======================================
<F4>函数列表
<F5>历史更改记录
<F6>前一个命令提示
<F7>后一个命令提示
<F8>打开命令提示
<F9>编译运行cpp, c, sh, python语言
<F11>全屏
<C-M-i> 格式化代码

<C-]> 跳转
<C-o> <c-t> 返回
<c-o> forward
<c-i> back
<C-s> 保存

折叠
zf 创建折叠
zd 删除折叠
zD recursion delet fold
zc 关闭折叠
zo 打开折叠
za 自动打开关闭折叠
/*<leader><space> za*/
zE delete all fold

标签
ma/b/c 标记
'a/b/c 到对应标记行
`a/b/c 到对应标签位置
:marks 列出所有标记
:delmarks  删除指定标记
:delmarks! 删除所有标记

终端
<M-=> 打开/关闭
<M-S-h> 移到左侧窗口
<M-S-j> 移到下侧窗口
<M-S-k> 移到上侧窗口
<M-S-l> 移到右侧窗口
<M--> register 0 paste
<M-q> normal模式切换      <c-\><c-n> 终端normal

'n'+'C-w'+'+' 纵向加行数
'n'+'C-w'+'-' 纵向减行数
'n'+'C-w'+'>' 横向加行数
'n'+'C-w'+'<' 横向减行数

git icons
'Modified'  : '✹'
'Staged'    : '✚'
'Untracked' : '✭'
'Renamed'   : '➜'
'Unmerged'  : '═'
'Ignored'   : '☒'
'Deleted'   : '✖'
'Unknown'   : '?'

debug
<leader>5 Continue()
<leader>3 Stop()
<leader>4 Restart()
<leader>6 Pause()
<leader>9 ToggleBreakpoint()
<leader>7 ToggleBreakpoint( {trigger expr,hit count expr } )
<leader>8 AddFunctionBreakpoint( '<cexpr' )
<leader>0 StepOver()
<leader>1 StepInto()
<leader>2 StepOut()
<leader>- 生成a.out
<leader>= 拷贝.vimspector.json到当前目录

<leader>cc   加注释
<leader>cu   解开注释
<leader>c<space>  加上/解开注释, 智能判断
<leader>cy   先复制, 再注解(p可以进行黏贴)

<C-d> insert mode 删除一行
<leader>q :q
<leader>Q :qa
/*<leader>wq :wq*/
/*<leader>wQ :wqa*/
/*<leader>ww :w !sudo tee % > /dev/null 强制sudo保存*/
/*<leader>qc :tabclose*/
:g/^$/d删除空行
:%s/\r$// 删除(c-v c-m)
:%s///g

set mouse= 关闭鼠标
set mouse=a 所有模式
set mouse=n 普通
set mouse =i 插入
set mouse=v 可视化

:checkhealth 检查vim状态
"設定跳轉的快捷鍵，可以跳轉到definition和declaration
<leader>gc  跳转到声明
<leader>gf  跳转到定义
<leader>gg  跳转到声明或定义
<leader>gv 显示变量类型
<leader>gh 显示相关文献
:YcmCompleter RefactorRename <new_name>  改变变量名称

"nmap <F4> :YcmDiags<CR>
<M-p> 开启关闭auto-pairs
<M-n> 到第n个标签

:no 打开mapkey

[,]的相关操作请:help unimpaired

surround插件用法
选中一片区域S", 把选中文本用""括起来,(),[]....也可以
cs}'把已经有的{}修改为'', 不需要选中
ds" 删除""

<leader>l 取消搜索高亮
<leader><leader>w\e\ge\b 使用vim-easymotion插件的功能

snippet功能请去看相关文档
K 查看光标下的文档包括shell and python
<C-j> 插入模式移动到行首
<C-k> 插入模式移动到行尾
<C-w>H 窗口移到最左边
<C-w>L右
<C-w>J下
<C-w>K上
:resize +/-N 窗口高度+/-N行
:vertical resize +/-N
vim --startuptime startuptime.log记录插件运行时间
shift/ctrl + <-/->可以在命令行快速移动(C-b, C-e)
在命令行c-f打开历史,c-c编辑

:Make 可以在前台quickfix窗口中运行make
:Make! 后台
:Dispatch <compiler> == :compiler <compiler> and :make
:Dispatch <command>
:Neomake
<leader>tn :TestNearest
<leader>tf :TestFile
<leader>ts :TestSuite
<leader>tl :TestLast
<leader>tv :TestVisit
<leader>tm :exec RunTestVerbose()<CR>

:SCROLLCOLOR 选择配色
<Leader>ww -- Open default wiki index file.
<Leader>wt -- Open default wiki index file in a new tab.
<Leader>ws -- Select and open wiki index file.
<Leader>wd -- Delete wiki file you are in.
<Leader>wr -- Rename wiki file you are in.
<Enter> -- Follow/Create wiki link.
<Shift-Enter> -- Split and follow/create wiki link.
<Ctrl-Enter> -- Vertical split and follow/create wiki link.
<Backspace> -- Go back to parent(previous) wiki link.
<Tab> -- Find next wiki link.
<Shift-Tab> -- Find previous wiki link.

gA 显示光标下方数字的四种表示形式（或在可视模式下选择）
crd，crx，cro，crb转换光标下的编号，以十进制，十六进制，八进制，二进制，分别。

:h eval查看vimscript文档 

<leader>r 运行python

 vim:tw=78:ts=8:noet:ft=help:norl:
